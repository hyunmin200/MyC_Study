pointer는 두가지로 이야기 할 수 있다.
pointer는 변수가 될 수도 있고 상수가 될 수도 있다.

pointer변수는 주소값 저장하기 위한 변수이다.
여기서 한가지 의문점을 가져야한다.
주소값은 실수일까 정수일까 주소값은 정수이다.

예로 32비트 시스템이라고 하면 주소값을 32비트로 표현을 한다.
64비트의 주소값 64비트이다.

여기서 우리는 int형 변수에 주소값을 넣을 수 있지만
왜 포인터 변수라는 것을 이용해서 주소값을 담는 것인지 이해를 해야 한다.

여까지 정리를 해보면
pointer변수는 주소값을 저장하는 변수이다
근데 주소값은 정수여서 int형 변수에도 넣을 수 있다.
하지만 우리는 포인터 변수를 사용한다. 이다

포인터변수의 선언
int num = 10;
	numPtr = &num // &는 주소값을 나타냄

int형의 변수의 주소값은
int형 포인터 변수에다가 저장을 해야한다.
그러면
double형 변수의 주소값은
double형 포인터 변수에 저장해야 한다고 유추할 수 있다.
일반화 시켜서
type형 변수의 주소값은
type형 포인터 변수에 저장을 해야한다.

자료형이 달라도 주소값은 똑같다.

왜 int형 변수의 주소값은 int형 포인터변수에 저장해야 하고
왜 double형 변수의 주소값은 double형 포인터변수에 저장을 해야하는가?

main(void){
	int num = 10;
	int* ptr = &nuem;
}
이런식으로 포인터를 사용할 수 있다

32비트 시스템에서는 ptr은 32비트 이다
포인터 변수의 크기는 시스템에 따라 다르다
64비트 시스템에서는 64비트의 주소값을 담아야 해서
8바이트이다

그래서 ptr이라는 포인터 변수가 선언이 된 것이다.
num에는 10이라는 값이 들어가있는데 &를 사용해 주소값을 넘겨주었기 때문에
num = 10의 주소값을 포인터가 받아서 num을 가리킨다.

main(void)
{
	double num = 3.15;
	double* ptr = &num; //ptr
}
double형이 이기때문에 double형 포인터를 사용함

일단 오늘은 여기 까지